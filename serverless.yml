service:
  name: sls-crud-test
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  settings:
    POSTS_TABLE: sls-crud-test-posts

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack

provider:
  name: aws
  profile: sls-admin-test
  runtime: nodejs12.x
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment: ${self:custom.settings}
  region: ap-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.settings.POSTS_TABLE}"

functions:
  createPost:
    handler: handler.createPost
    events:
      - http:
          path: /post
          method: post
  getAllPosts:
    handler: handler.getAllPosts
    events:
      - http:
          path: /posts
          method: get
  getPosts:
    handler: handler.getPosts
    events:
      - http:
          path: /posts/{number}
          method: get
  getPost:
    handler: handler.getPost
    events:
      - http:
          path: /post/{id}
          method: get
  updatePost:
    handler: handler.updatePost
    events:
      - http:
          path: /post/{id}
          method: put
  deletePost:
    handler: handler.deletePost
    events:
      - http:
          path: /post/{id}
          method: delete

resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.settings.POSTS_TABLE}
